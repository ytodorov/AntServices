@model PingPermalinkViewModel

@{
    ViewBag.Title = "Ping";
}
<div class="normalheader transition animated fadeIn">
    
</div>
<div class="col-lg-12">
    <div class="hpanel hgreen">
        <div class="panel-body">
            <p>
                <input type="text" class="form-control" id="ip" value="@(Model != null ? Model.Ip : "facebook.com")" placeholder="Host name or IPv4/6">
            </p>
            <p>
                <button type="button" class="ladda-button btn center-block btn-outline btn-success" id="btnPing" data-style="zoom-in">
                    <span class="ladda-label">Ping</span>
                    <span class="ladda-spinner"></span>
                </button>

            </p>
        </div>
    </div>
</div>

    



@if (Model != null)
{
    <div class="col-lg-12">
        <div class="hpanel hyellow">
            <div class="panel-body">
                <p>
                    @(Html.Kendo().Grid<PingResponseSummaryViewModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.SourceIpAddress).Title("Src");
            columns.Bound(c => c.SourceHostName).Title("SrcHN");
            columns.Bound(c => c.DestinationIpAddress).Title("Dest");
            columns.Bound(c => c.DestinationHostName).Title("DestHN");
            //columns.Bound(c => c.AddressInfoSummary).GroupHeaderTemplate(f => f.Title).Title(" ");
            columns.Bound(c => c.MaxRtt);
            columns.Bound(c => c.MinRtt);
            columns.Bound(t => t.AvgRtt);
        })
        .Scrollable(s => s.Enabled(false))
        .ToolBar(t =>
        {
            t.Excel().Text(string.Empty);
            t.Pdf().Text(string.Empty);
        })
        .Excel(e => e.FileName("pingExport(www.toolsfornet.com).xlsx"))
        .Pdf(e => e.AllPages().FileName("pingExport(www.toolsfornet.com).pdf"))
        //.Groupable(g => g.Enabled(true))
        .DataSource(dataSource => dataSource
            .Ajax()
            .ServerOperation(false)
        //.Group(g => g.Add(s => s.AddressInfoSummary))

        ).BindTo(Model?.PingResponseSummaries).Deferred()

                    )
                </p>

            </div>
        </div>
    </div>
}

@if (Model != null)
{
    <div class="col-lg-12">
        <div class="hpanel hred">
            <div class="panel-body">
                <p>
                    @(Html.Kendo().Chart(Model.PingResponseSummaries).Theme("silver")
        .Name("chart")
        .Title("Ping chart")
        .Legend(legend => legend
            .Position(ChartLegendPosition.Top)
        )

        .Series(series =>
        {
            series.Column(model => model.MaxRtt).Name("MaxRtt");
            series.Column(model => model.AvgRtt).Name("AvgRtt");
            series.Column(model => model.MinRtt).Name("MinRtt");
        })
        .CategoryAxis(axis => axis
            .Categories(model => model.SourceHostName)
            .Labels(labels => labels.Rotation(-90))
            .MajorGridLines(lines => lines.Visible(false))
        )
        .ValueAxis(axis => axis.Numeric()
            .Labels(labels => labels.Format("{0:N0}"))
            //.MajorUnit(10000)
            .Line(line => line.Visible(false))
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Format("{0:N0}")
        ).Deferred()
                    )

                </p>
            </div>
        </div>
    </div>


    
}

@if (Model != null)
{

    <div class="col-lg-12">
        <div class="hpanel hblue">
            <div class="panel-body">
                <p>
                    <div id="map" style="width:100px;height: 10px"></div>
                </p>
            </div>
        </div>
    </div>

}
@if (Model != null)
{
    <div class="col-lg-12">
        <div class="hpanel horange">
            <div class="panel-body">
                <p>
                    <input type="text" class="form-control" id="permalink" value="@(Request.Url.ToString())" readonly>
                </p>
            </div>
        </div>
    </div>
}

@section scripts {
    @if (Model != null)
    {
        <script>
            var permalinkId = '@Model.Id';

            $.ajax({
                method: "POST",
                url: "/home/googlemapfromips",
                data: { permalinkId: permalinkId },
                success: function f(gmData) {
                    $("#map").height("300px");
                    eval(gmData);
                }
            });
        </script>
    }





    <script type="text/javascript">

        $("#btnPing").click(function btnPingClick(e) {
            e.preventDefault();

            var l = $("#btnPing").ladda();

            // Start loading
            l.ladda('start');


            $.ajax({
                method: "POST",
                url: "/ping/GenerateId",
                data: {
                    ip: $("#ip").val(),
                    packetsCount: $("#tbPacketsCount").val(),
                    packetsSize: $("#tbPacketsSize").val(),
                    delayBetweenPings: $("#tbDelayBetweenPings").val(),
                    ttl: $("#tbTTL").val(),
                    df: $('#cbDontFragment').is(':checked')
                },
                success: function f(id) {
                    window.location.href = "ping?id=" + id;

                }
            })

        });
        $("#ip").keyup(function myfunction(eventData) {
            if (eventData.keyCode == 13) {
                $("#btnPing").click();
            }

        });

    </script>
}

<div class="normalheader transition animated fadeIn">

</div>
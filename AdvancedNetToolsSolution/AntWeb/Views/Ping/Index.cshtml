@model PingPermalinkViewModel

@{
    ViewBag.Title = "Ping";
}
<div class="normalheader transition animated fadeIn">

</div>
<div class="col-lg-12">
    <div class="hpanel hgreen">
        <div class="panel-heading">
            <p class="text-center">
                Ping an IP address or host name
            </p>
        </div>
        <div class="panel-body">
            <p>
                <input type="text" class="form-control" id="ip" value="@(Model != null ? Model.DestinationAddress : "facebook.com")" placeholder="Host name or IPv4/6">
            </p>
            <p>
                <button type="button" class="ladda-button btn center-block btn-outline btn-success" id="btnPing" data-style="zoom-in">
                    <span class="ladda-label">Ping</span>
                    <span class="ladda-spinner"></span>
                </button>

            </p>
        </div>
    </div>
</div>





@if (Model != null)
{
    <div class="col-lg-12">
        <div class="hpanel hyellow">
            <div class="panel-heading">
                <p class="text-center">
                    Ping grid
                </p>
            </div>
            <div class="panel-body">
                <p>
                    @(Html.Kendo().Grid<PingResponseSummaryViewModel>()
        .Name("pingResultsGrid")
        .Columns(columns =>
        {
            //columns.Bound(c => c.SourceIpAddress).Title("Src");
            columns.Bound(c => c.SourceHostName).Title("SrcHN");
            columns.Bound(c => c.DestinationIpAddress).Title("Dest");
            IPAddress dummy;
            var isIpAddress = IPAddress.TryParse(Model.DestinationAddress, out dummy);
            if (!isIpAddress)
            {
                columns.Bound(c => c.DestinationHostName).Title("DestHN");
            }
            //columns.Bound(c => c.AddressInfoSummary).GroupHeaderTemplate(f => f.Title).Title(" ");
            columns.Bound(c => c.MaxRtt);
            columns.Bound(c => c.MinRtt);
            columns.Bound(t => t.AvgRtt);
        })
        .Scrollable(s => s.Enabled(false))
        .ToolBar(t =>
        {
            t.Excel().Text(string.Empty);
            t.Pdf().Text(string.Empty);
        })
        .Excel(e => e.FileName("pingExportHistory(www.toolsfornet.com).xlsx"))
        .Pdf(e => e.AllPages().FileName("pingExportHistory(www.toolsfornet.com).pdf"))
        .DataSource(dataSource => dataSource
            .Ajax()
            .ServerOperation(false)

        ).BindTo(Model?.PingResponseSummaries).Deferred()

                    )
                </p>

            </div>
        </div>
    </div>
}

@if (Model != null)
{
    <div class="col-lg-12">
        <div class="hpanel hred">
            <div class="panel-heading">
                <p class="text-center">
                    Ping chart
                </p>
            </div>
            <div class="panel-body">
                <p>
                    @(Html.Kendo().Chart(Model.PingResponseSummaries).Theme("silver")
        .Name("pingResultsChart")      
        .Legend(legend => legend
            .Position(ChartLegendPosition.Top)
        )

        .Series(series =>
        {
            series.Column(model => model.MaxRtt).Name("MaxRtt");
            series.Column(model => model.AvgRtt).Name("AvgRtt");
            series.Column(model => model.MinRtt).Name("MinRtt");
        })
        .CategoryAxis(axis => axis
            .Categories(model => model.SourceHostName)
            .Labels(labels => labels.Rotation(-90))
            .MajorGridLines(lines => lines.Visible(false))
        )
        .ValueAxis(axis => axis.Numeric()
            .Labels(labels => labels.Format("{0:N0}"))
            //.MajorUnit(10000)
            .Line(line => line.Visible(false))
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Format("{0:N0}")
        ).Deferred()
                    )

                </p>
            </div>
        </div>
    </div>



}

@if (Model != null)
{

    <div class="col-lg-12">
        <div class="hpanel hblue">
            <div class="panel-heading">
                <p class="text-center">
                    Ping map
                </p>
            </div>
            <div class="panel-body">
                <p>
                    <div id="map" style="width:100px;height: 10px"></div>
                </p>
            </div>
        </div>
    </div>

}
@if (Model != null)
{
    <div class="col-lg-12">
        <div class="hpanel horange">
            <div class="panel-heading">
                <p class="text-center">
                    Ping permalink
                </p>
            </div>
            <div class="panel-body">
                <p class="text-center">
                    <a href="@(Request.Url.ToString())" id="permalink">@(Request.Url.ToString())</a>
                    @*<input type="text" class="form-control" id="permalink" value="@(Request.Url.ToString())" readonly>*@
                </p>
                <p class="text-center" style="font-size:larger">
                    Share on:
                </p>
                <p class="text-center" style="font-size:xx-large">

                    <a href="#" target="_blank"><i class="fa fa-facebook-square" title="Share on Facebook"></i></a>
                    <a href="#" target="_blank"><i class="fa fa-twitter-square" title="Share on Twitter"></i></a>
                    <a href="#" target="_blank"><i class="fa fa-google-plus-square" title="Share on Google+"></i></a>
                    <a href="javascript:void(0)"><i class="fa fa-envelope-square" title="Send email"></i></a>
                    <a href="javascript:void(0)"><i class="fa fa-pencil-square" title="Copy to clipboard" data-clipboard-action="copy" data-clipboard-target="#permalink"></i></a>
                </p>
            </div>
        </div>
    </div>
}

@section scripts {
    @if (Model != null)
    {
        <script>
            var permalinkId = '@Model.Id';

            $.ajax({
                method: "POST",
                url: "/home/googlemapfromips",
                data: { permalinkId: permalinkId },
                success: function f(gmData) {
                    $("#map").height("300px");
                    eval(gmData);
                }
            });
        </script>
    }
<script src="~/Scripts/viewsJS/pingIndex.js"></script>
    
}

@*history*@

<div class="col-lg-12">
    <div class="hpanel hviolet">
        <div class="panel-heading">
            <p class="text-center">
                Ping history for current user's IP
            </p>
        </div>
        <div class="panel-body">
            <p>
                @(Html.Kendo().Grid<PingPermalinkViewModel>()
        .Name("pingPermalinksHistory")
        .Columns(columns =>
        {
            //columns.Bound(c => c.SourceIpAddress).Title("Src");
            columns.Bound(c => c.DestinationAddress).Title("Address");
            columns.Bound(c => c.PermalinkAddress).Title("Permalink").ClientTemplate("<a href='#: data.PermalinkAddress #'>#: data.PermalinkAddress #</a>");
            columns.Bound(c => c.DateCreated).Title("Created on").Format("{0:u}");
        })
        .Scrollable(s => s.Enabled(false))
        .ToolBar(t =>
        {
            t.Excel().Text(string.Empty);
            t.Pdf().Text(string.Empty);
        })
        .Excel(e => e.FileName("pingExport(www.toolsfornet.com).xlsx"))
        .Pdf(e => e.AllPages().FileName("pingExport(www.toolsfornet.com).pdf"))
        .DataSource(dataSource => dataSource
            .Ajax()
            .ServerOperation(false)
            .Read(r => r.Action("ReadPingPermalinks", "Ping"))

        )
        .Deferred()

                )
            </p>

        </div>
    </div>
</div>


<div class="normalheader transition animated fadeIn">

</div>
@model TraceroutePermalinkViewModel

@{
    ViewBag.Title = "Traceroute";
    ViewBag.MetaDescription = "Free distributed online traceroute service. Display the route and measure transit delays of packets across an IP network";
}
<div class="normalheader transition animated fadeIn small-header">
    <div class="hpanel">
        <div class="panel-body">
            <div id="hbreadcrumb" class="pull-right">
                <ol class="hbreadcrumb breadcrumb">
                    <li><a href="/">Home</a></li>
                    <li><a href="/ping">Traceroute</a></li>
                </ol>
            </div>
            <h2 class="font-light m-b-xs">
                Traceroute
            </h2>
            <small>Display the route and measure transit delays of packets across an IP network</small>
        </div>
    </div>
</div>


@Html.Partial("_Addresses", new AddressViewModel()
{
    ButtonId = "btnTraceRoute",
    ButtonText = "Traceroute",
    DefaultDestinationAddress = Model?.DestinationAddress,
    PanelTitle = "Traceroute to an IP address or host name"
}
)


@if (Model != null)
{

    @Html.Raw((Html.AntCreateStandardPanel("hyellow", "Table: Round-trip times and latencies in ms.", "<p>" +
        Html.Kendo().Grid<TracerouteResponseDetailViewModel>()
            .Name("pingResultsGrid")
            .Columns(columns =>
            {

                columns.Bound(c => c.Hop).Title("Hop");
                columns.Bound(t => t.Rtt).Title("Rtt");
                columns.Bound(c => c.Ip).Title("Ip");
                columns.Bound(c => c.AddressName).Title("Name");
            })
            .Scrollable(s => s.Enabled(false))
            .ToolBar(t =>
            {
                t.Excel().Text(string.Empty);
                t.Pdf().Text(string.Empty);
            })
            .Excel(e => e.AllPages(true).FileName("tracerouteExportHistory(www.toolsfornet.com).xlsx").ProxyURL(Url.Action("Excel", "Export")))
            .Pdf(e => e.AllPages().FileName("tracerouteExportHistory(www.toolsfornet.com).pdf").ProxyURL(Url.Action("Pdf", "Export")))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Sort(s => s.Add(ss => ss.Hop))
                .ServerOperation(false)

            )
            .Sortable()
            .BindTo(Model?.AllDetails)
            .Deferred().ToHtmlString() + "</p>")))

}




@section scripts {
    <script src="~/scripts/viewsjs/tracerouteindex.js"></script>
}

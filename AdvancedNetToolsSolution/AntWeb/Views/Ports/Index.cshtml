@model PortPermalinkViewModel

@{
    ViewBag.Title = "Ports";
}

<div class="col-lg-12">
    <div class="hpanel hgreen">
        <div class="panel-heading">
            <p class="text-center">
                Port scanner
            </p>
        </div>
        <div class="panel-body">
            <p>
                <input type="text" class="k-textbox" id="ip" value="@(Model != null ? Model.DestinationAddress : "facebook.com")" placeholder="Host name or IPv4/6">
            </p>
            <p class="text-center">
                <input type="checkbox" id="showInHistory" class="k-checkbox" checked="checked">
                <label class="k-checkbox-label" for="showInHistory">Save in history</label>
            </p>
            <p>
                <button type="button" class="ladda-button btn center-block btn-outline btn-success" id="btnPortScan" data-style="zoom-in">
                    <span class="ladda-label">Scan</span>
                    <span class="ladda-spinner"></span>
                </button>

            </p>
        </div>
    </div>
</div>


@if (Model != null)
{
    <div class="col-lg-12">
        <div class="hpanel hyellow">
            <div class="panel-heading">
                <p class="text-center">
                    Open ports
                </p>
            </div>
            <div class="panel-body">
                <p>
                    @(Html.Kendo().Grid<PortResponseSummaryViewModel>()
        .Name("portResultsGrid")
        .Columns(columns =>
        {
            columns.Bound(c => c.PortNumber).Title("Port");
            columns.Bound(c => c.Protocol);
            columns.Bound(c => c.Service);
            columns.Bound(c => c.State);
            columns.Bound(c => c.Version);
        })
        .Scrollable(s => s.Enabled(false))
        .ToolBar(t =>
        {
            t.Excel().Text(string.Empty);
            t.Pdf().Text(string.Empty);
        })
        .Excel(e =>
        e.FileName("portExportHistory(www.toolsfornet.com).xlsx")

         .Filterable(true)
        .ProxyURL(Url.Action("Excel", "Export"))
        )
        .Pdf(e => e.AllPages().FileName("portExportHistory(www.toolsfornet.com).pdf").ProxyURL(Url.Action("Pdf", "Export")))
        .DataSource(dataSource => dataSource
            .Ajax()
            .ServerOperation(false)

        )
        .BindTo(Model?.PortResponseSummaries)
        .Deferred()

                    )
                </p>

            </div>
        </div>
    </div>
}



@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {


            $("#btnPortScan").click(function btnPingClick(e) {
                e.preventDefault();

                var l = $("#btnPortScan").ladda();

                // Start loading
                l.ladda('start');
                debugger;
                var showInHistory = $("#showInHistory").is(":checked");

                $.ajax({
                    method: "POST",
                    url: "/ports/generateid",

                    data: {
                        ip: $("#ip").val(),
                        showInHistory: showInHistory,
                    },
                    success: function f(id) {
                        window.location.href = "ports?id=" + id;
                    }
                })

            });


        });
    </script>
}
